План урока:
Псевдофайловая система sysfs
Менеджер устройств systemd-udevd
Правила udev
Утилита для управления systemd-udevd — udevadm
Получение информации об устройствах
Разграничение доступа к подключаемым устройствам
Управление модулями ядра
Практическое задание

=================== Псевдофайловая система sysfs ==============================================================================================
sysfs		- cистема файлов. является псевдофайловой системой в Linux, которая предоставляет информацию о различных компонентах системы в виде файлов и каталогов.  
sysfs 		- представляет собой интерфейс для ядра и пользовательских программ для взаимодействия с аппаратными средствами системы и управления ими. 
sysfs 		- используется для доступа к информации об аппаратном обеспечении и устройствах, в Astra Linux.
Использование sysfs в Astra Linux:
/sys/class/power_supply/BAT0/capacity				Контроль заряда батареи ноутбука sysfs может использоваться для доступа к информации о заряде батареи ноутбука. Файл /sys/class/power_supply/BAT0/capacity 				содержит информацию о текущем уровне заряда батареи. Файл /sys/class/power_supply/BAT0/status содержит информацию о состоянии зарядки батареи.
/sys/class/net/eth0/speed					Настройка параметров сетевых устройств sysfs используется для доступа к информации о сетевых устройствах и настройке их параметров. Файл 
/sys/class/net/eth0/speed 					содержит информацию о скорости сетевого интерфейса eth0. Файл 
/sys/class/net/eth0/address 					содержит MAC-адрес интерфейса eth0.
/sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq		Мониторинг производительности системы sysfs может использоваться для мониторинга производительности системы. Файл
/sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq 		содержит информацию о текущей скорости процессора. Каталог 
/sys/class/net/eth0/statistics/ 				содержит информацию о статистике сетевого интерфейса.
/sys/class/drm/card0/device/power_dpm_force_performance_level 	Управление видеокартой sysfs используется для управления настройками видеокарты. Файл
/sys/class/drm/card0/device/power_dpm_force_performance_level 	может использоваться для изменения режима энергопотребления видеокарты.
/sys/class/sound/hwC0D0/init_pin_configs			Управление звуковыми устройствами sysfs также используется для доступа к информации о звуковых устройствах и настройке их параметров. Файл
/sys/class/sound/hwC0D0/init_pin_configs 			содержит информацию о настройке пинов звуковой карты.
/sys/bus/usb/devices/*/power/control				Управление электропитанием устройств sysfs может использоваться для управления режимами энергопотребления устройств, таких как USB-устройства.  Файлы 
в /sys/bus/usb/devices/*/power/control 				можно использовать для изменения режима энергопотребления устройства.
sysfs является полезным интерфейсом для взаимодействия с аппаратными средствами. Его можно использовать для мониторинга и управления системой в Astra Linux.


=================== Менеджер устройств systemd-udevd ============================================================================================
systemd-udevd 			— это демон, который управляет устройствами в системе. Он отвечает за обнаружение, создание и удаление устройств во время загрузки системы и во время ее работы. 
systemd-udevd 			используется в различных дистрибутивах Linux, в том числе и в Astra Linux.
Демон 				— это программа, которая запускается в фоновом режиме (без терминала или пользовательского интерфейса), ожидая событий и предлагая какие-то службы для их выполнения. Использование systemd-udevd:
----------------------------- 1. Создание правил udev ------------------------------------------
systemd-udevd 			работает с правилами udev, которые позволяют настраивать и контролировать обработку устройств в системе. Например, правило udev может быть создано для автоматического монтирования USB-устройства при подключении в системе. 
/etc/udev/rules.d/.rules	Для этого необходимо создать файл с расширением .rules в каталоге /etc/udev/rules.d/. Пример правила udev для монтирования USB-устройства:
	KERNEL=="sd*", ATTRS{vendor}=="USB Vendor", ATTRS{product}=="USB Product", 
	ACTION=="add", RUN+="/usr/bin/mount /dev/%k /mnt/usb"
----------------------------- 2. Отслеживание изменений устройств ------------------------------
systemd-udevd 			может использоваться для отслеживания изменений в устройствах. Например,  
udevadm monitor 		команда, которая выводит сообщения об изменениях в устройствах, таких как подключение/отключение USB-устройств, изменение параметров сетевого интерфейса.
----------------------------- 3. Извлечение информации об устройствах --------------------------
systemd-udevd 			может использоваться для получения информации об устройствах в системе. 
udevadm info 			Команда выводит информацию об устройстве на основе его пути в системе. 
udevadm info /dev/sda 		Например, команда выведет информацию об устройстве /dev/sda, включая его идентификатор, атрибуты и другую информацию.  
----------------------------- 4. Управление устройствами ---------------------------------------
systemd-udevd 			может использоваться для управления устройствами в системе. 
udevadm trigger 		Например, команда принудительно вызывает обработку правил udev для всех устройств, что может быть полезно при динамическом добавлении и удалении устройств в системе.
----------------------------- 5. Обнаружение новых устройств -----------------------------------
systemd-udevd 			может автоматически обнаруживать новые устройства в системе и выполнять соответствующие действия при их появлении. Например, при подключении нового USB-устройства
systemd-udevd 			автоматически создаст соответствующий device node и вызовет правило udev, чтобы настроить параметры устройства.
systemd-udevd 			играет важную роль в управлении устройствами в Linux-системах, и его команды могут быть полезны во многих сценариях, связанных с управлением устройствами.

=================== Правила udev ================================================================================================================
		 — это инструкции, которые определяют, как система Linux должна обрабатывать устройства, включая их создание, изменение и удаление. 
/etc/udev/rules.d/.rules	файл с расширением .rules в каталоге /etc/udev/rules.d/. 
/etc/udev/rules.d/.		В Astra Linux правила udev создаются в каталоге. Примеры правил udev в Astra Linux:
------------------ 1.Монтирование USB-устройства: 
Это правило запускает скрипт монтирования /bin/mount при добавлении устройства с подсистемой "usb" и драйвером "usb-storage".
	ACTION=="add", KERNEL=="sd*", SUBSYSTEMS=="usb", DRIVERS=="usb-storage", RUN+="/bin/mount /dev/%k /mnt/usb"

------------------ 2.Настройка сетевого интерфейса: 
Это правило настраивает интерфейс eth0 на работу со скоростью 100 Мбит/с, полным дуплексом и отключенной автоматической настройкой.
	ACTION=="add", SUBSYSTEM=="net", KERNEL=="eth*", NAME="eth0", RUN+="/sbin/ethtool -s eth0 speed 100 duplex full autoneg off"

------------------ 3.Запуск скрипта при добавлении устройства: 
Это правило запускает скрипт /home/user/scripts/myscript.sh при подключении устройства sda.
	ACTION=="add", KERNEL=="sda", RUN+="/home/user/scripts/myscript.sh"

------------------ 4.Создание символической ссылки для устройства: 
Это правило создает символическую ссылку /dev/mydisk для устройства sdb1.
	KERNEL=="sdb1", SYMLINK+="mydisk"

------------------ 5.Настройка прав доступа к устройству: 
Это правило устанавливает права доступа 0666 для устройства sdc1 и устанавливает владельца устройства user, а группу устройства users.
	KERNEL=="sdc1", MODE="0666", OWNER="user", GROUP="users"

------------------ 6.Создание дополнительных устройств: 
Это правило создает символические ссылки /dev/serial и /dev/printer для устройств ttyS0 и lp0 соответственно.
	KERNEL=="ttyS0", SYMLINK+="serial"
	KERNEL=="lp0", SYMLINK+="printer"

------------------ 7.Назначение звукового сигнала при подключении нового устройства: 
Это правило проигрывает звуковой файл /usr/share/sounds/sound.wav при подключении нового устройства.
	ACTION=="add", RUN+="/usr/bin/play /usr/share/sounds/sound.wav"

------------------ 8.Удаление правил udev для определенного устройства: 
Это правило удалит правило udev из файла /lib/udev/rules.d/10-my-usb.rules для устройства с серийным номером 123456, подсистемой usb и драйвером usb-storage.
	SUBSYSTEMS=="usb", DRIVERS=="usb-storage", ATTRS{serial}=="123456", RUN+="/bin/rm /lib/udev/rules.d/10-my-usb.rules"
Правила udev позволяют гибко настроить обработку устройств в системе, делая поведение устройств более предсказуемым и управляемым.


=================== Утилита для управления systemd-udevd — udevadm ==================================================================================
udevadm 				- это утилита командной строки для управления демоном systemd-udevd.  Она предоставляет множество команд для отладки, тестирования и настройки работы systemd-udevd. Использование udevadm:
------------------ 1. Информация об устройстве 
udevadm info 				позволяет выводить подробную информацию о заданном устройстве, такую как идентификатор, атрибуты и дополнительную информацию о драйверах и подсистемах.
------------------ 2. Мониторинг событий 
udevadm monitor 			позволяет отслеживать события, связанные с устройствами, такие как подключение и отключение устройств. Эта команда может быть особенно полезна при отладке и тестировании устройств.
------------------ 3. Перезапуск демона systemd-udevd 
udevadm control --reload 		позволяет перезапустить демон systemd-udevd, что может быть полезно при изменении правил udev.
------------------ 4. Тестирование правил udev 
udevadm test 				позволяет тестировать правила udev на заданном устройстве, выводя информацию о том, как будут обработаны события в соответствии с правилами udev.
------------------ 5. Создание device node 
udevadm trigger 			запускает обработку правил udev для всех устройств в системе, включая создание соответствующих device node.
------------------ 6. Удаление правил udev 
udevadm control --remove-rule 		позволяет удалять правила udev, заданные в файле конфигурации.
------------------ 7. Вывод списка устройств 
udevadm info -q all -n /dev/sdb		позволяет вывести информацию о заданном устройстве, например /dev/sdb.
------------------ 8. Использование udevadm control 
udevadm control 			предоставляет несколько опций 
udevadm control --log-priority 		позволяет изменить уровень журналирования демона systemd-udevd
udevadm control --dump-db 		выводит информацию о базе данных правил udev.
------------------ 9. Изменение сведений об устройстве 
udevadm trigger --sysname-match=sd* 	позволяет изменить свойства устройств в системе, такие как наименование устройства, путем изменения атрибутов и/или изменения сведений о текущих подключениях.
------------------ 10. Использование udevadm settle 
udevadm settle 				позволяет дождаться завершения обработки событий, связанных с устройствами, включая создание device node, прежде чем продолжать выполнение команд и скриптов. Это может быть особенно полезно в автоматических сценариях, где можно настроить скрипты, чтобы они ждали завершения обработки udev перед выполнением дальнейших действий.
udevadm 				- полезный инструмент для управления демоном systemd-udevd и настройки обработки устройств в системе Linux.


=================== Получение информации об устройствах =============================================================================================
В Astra Linux информация об устройствах может быть получена с помощью команд и утилит, таких как lsusb, lspci, lsblk, udevadm и других.
Примеры использования команд во вложенной картинке. Данные команды могут быть особенно полезны при отладке, настройке и обслуживании системы.


=================== Разграничение доступа к подключаемым устройствам ================================================================================
udev					В Astra Linux доступ к подключаемым устройствам может быть разграничен путем настройки правил, использования polkit и ACL (Access Control Lists).
udev 					Правила могут быть использованы для разграничения доступа к устройствам путем применения правил в соответствии с различными характеристиками устройства, такими как идентификатор производителя, модель устройства и т.д. Например: 
sudo groupadd mygroup					- Создать новую группу. Создать группу пользователей, которым разрешено использовать определенное устройство:
sudo usermod -a -G mygroup myusername			- Добавить пользователя в группу
sudo nano /etc/udev/rules.d/20-mydevice.rules		- Создать правило udev для разрешения доступа к определенному устройству. Добавить следующее правило в файл
	SUBSYSTEM=="usb", ATTR{idVendor}=="1234", ATTR{idProduct}=="5678", GROUP="mygroup", MODE="0660"
sudo udevadm control –reload				- Перезапустить udev

Polkit 					может быть использован для установки правил авторизации для конкретных задач в системе. Например: 
sudo nano /etc/polkit-1/localauthority/50-local.d/10-mydevice.pkla	- Создайте правило polkit, чтобы разрешить использование определенного устройства. Создать файл /etc/polkit-1/localauthority/50-local.d/10-mydevice.pkla Вставить следующее содержимое в файл:
	[Allow group mygroup to access mydevice]
	Identity=unix-group:mygroup
	Action=org.freedesktop.devicekit.disks.filesystem-mount;org.freedesktop.devicekit.disks.filesystem-unmount-others;
	ResultAny=yes

ACL 					является дополнительным уровнем разграничения доступа для файловых систем, который позволяет управлять доступом к файлам и каталогам для определенных пользователей и групп. Например: 
sudo apt-get install acl			- Монтирование файловой системы с ACL. Установить пакет acl (если он не установлен)

sudo nano /etc/fstab				- Изменить fstab для файловой системы с опцией acl
	/dev/sda1      /mnt/data      ext4      defaults,acl      0      2

sudo mount -a					- Перезагрузить систему или выполнить команду
setfacl -m u:username:rw /path/to/file		- Установка ACL на файл или каталог. Установить права ACL для конкретного файла (-m для добавления прав)
setfacl -R -m u:username:rw /path/to/directory	- Установить права ACL для всех файлов в каталоге (-d для установки на директорию)
getfacl /path/to/file_or_directory		- Просмотр прав ACL для файла или каталога


=================== Управление модулями ядра ==========================================================================================================
		Модули ядра Linux 	— это фрагменты кода, которые можно загрузить в ядро операционной системы или удалить из него без перезагрузки всей системы. Они расширяют функциональность ядра, не требуя полной перекомпиляции. Управление модулями ядра в Astra Linux можно осуществлять с помощью различных команд и утилит, таких как lsmod, modinfo, modprobe, rmmod и другие. Используя эти команды, можно установить или удалить модули ядра, проверить их статус, а также просмотреть информацию о них. Примеры использования команд на вложенной картинке
Эти инструменты могут быть полезны при настройке и управлении модулями ядра в Astra Linux. Каждая из этих команд и утилит имеет свои особенности. Их можно использовать в сочетании друг с другом в зависимости от конкретной задачи.


=================== 
